{"version":3,"sources":["default.png","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/NewsView.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","NewsView","useState","trendingFeed","setTrendingFeed","currentPage","setCurrentPage","fetching","setFetching","useEffect","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","axios","require","default","trends","method","url","headers","request","then","response","data","prevState","catch","error","console","finally","map","user","width","controls","src","videoUrl","type","text","shortid","generate","authorMeta","avatar","alt","nickName","defaultImage","to","name","hashtags","tag","commentCount","diggCount"],"mappings":"iGAAe,QAA0B,qC,uGCI1B,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,2DIA/E,SAASC,IACtB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,SAAUC,GAE7B,WACLF,SAASG,oBAAoB,SAAUD,MAExC,IAEH,IAAMA,EAAgB,SAAAE,GAElBA,EAAEC,OAAOC,gBAAgBC,cACtBH,EAAEC,OAAOC,gBAAgBE,UAAYC,OAAOC,aAC/C,KAEAZ,GAAY,IAIVa,EAAQC,EAAQ,IAASC,QAEzBC,EAAS,CACbC,OAAQ,MACRC,IAAI,+DAAD,OAAiErB,GACpEsB,QAAS,CACP,kBAAmB,0BACnB,iBAAkB,uDAqBtB,OAjBAlB,qBAAU,WACJF,GACFc,EACGO,QAAQJ,GACRK,MAAK,SAAUC,GACd,IAAMC,EAAOD,EAASC,KACtB3B,EAAgB,GAAD,SAAKD,GAAL,EAAsB4B,KACrCzB,GAAe,SAAA0B,GAAS,OAAIA,EAAY,QAEzCC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,MAEfE,SAAQ,kBAAM5B,GAAY,QAG9B,CAACD,IAGF,8BACGJ,GACCA,EAAakC,KAAI,SAAAC,GAAI,OACnB,eAAC,WAAD,WACE,uBACEC,MAAM,MACNC,SAAS,WAFX,SAKE,wBAAQC,IAAKH,EAAKI,SAAUC,KAAK,iBAEnC,4BAA6BL,EAAKM,MAA1BC,IAAQC,YACfR,EAAKS,WAAWC,OACf,qBAEET,MAAM,QACNE,IAAKH,EAAKS,WAAWC,OACrBC,IAAKX,EAAKS,WAAWG,UAHhBL,IAAQC,YAMf,qBACEP,MAAM,QACNE,IAAKU,IACLF,IAAKX,EAAKS,WAAWG,WAGzB,4BACE,cAAC,IAAD,CAAME,GAAE,mBAAcd,EAAKS,WAAWM,MAAtC,SACE,4BAAIf,EAAKS,WAAWG,cAFhBL,IAAQC,YAKfR,EAAKgB,UACJhB,EAAKgB,SAASjB,KAAI,SAAAkB,GAAG,OACnB,kCAA8BA,EAAIF,OAA1BR,IAAQC,eAEpB,2CACY,4BAAIR,EAAKkB,kBAErB,wCACS,4BAAIlB,EAAKmB,iBApCLZ,IAAQC","file":"static/js/news-view.3a0a2e13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.9d463bad.png\";","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect, Fragment } from 'react';\r\nimport shortid from 'shortid';\r\nimport { Link } from 'react-router-dom';\r\nimport defaultImage from '../default.png';\r\n\r\nexport default function NewsView() {\r\n  const [trendingFeed, setTrendingFeed] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [fetching, setFetching] = useState(true);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler);\r\n\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  const scrollHandler = e => {\r\n    if (\r\n      e.target.documentElement.scrollHeight -\r\n        (e.target.documentElement.scrollTop + window.innerHeight) <\r\n      100\r\n    ) {\r\n      setFetching(true);\r\n    }\r\n  };\r\n\r\n  const axios = require('axios').default;\r\n\r\n  const trends = {\r\n    method: 'GET',\r\n    url: `https://tiktok33.p.rapidapi.com/trending/feed/?limit=5&page=${currentPage}`,\r\n    headers: {\r\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n      'x-rapidapi-key': '98c48d70edmsh2b6af9661af19a5p11b7f7jsnbe8317f49551',\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (fetching) {\r\n      axios\r\n        .request(trends)\r\n        .then(function (response) {\r\n          const data = response.data;\r\n          setTrendingFeed([...trendingFeed, ...data]);\r\n          setCurrentPage(prevState => prevState + 1);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        })\r\n        .finally(() => setFetching(false));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [fetching]);\r\n\r\n  return (\r\n    <div>\r\n      {trendingFeed &&\r\n        trendingFeed.map(user => (\r\n          <Fragment key={shortid.generate()}>\r\n            <video\r\n              width=\"200\"\r\n              controls=\"controls\"\r\n              /* poster=\"video/duel.jpg\" */\r\n            >\r\n              <source src={user.videoUrl} type=\"video/mp4;\" />\r\n            </video>\r\n            <p key={shortid.generate()}>{user.text}</p>\r\n            {user.authorMeta.avatar ? (\r\n              <img\r\n                key={shortid.generate()}\r\n                width=\"150px\"\r\n                src={user.authorMeta.avatar}\r\n                alt={user.authorMeta.nickName}\r\n              />\r\n            ) : (\r\n              <img\r\n                width=\"150px\"\r\n                src={defaultImage}\r\n                alt={user.authorMeta.nickName}\r\n              />\r\n            )}\r\n            <p key={shortid.generate()}>\r\n              <Link to={`/profile/${user.authorMeta.name}`}>\r\n                <b>{user.authorMeta.nickName}</b>\r\n              </Link>\r\n            </p>\r\n            {user.hashtags &&\r\n              user.hashtags.map(tag => (\r\n                <p key={shortid.generate()}>#{tag.name}</p>\r\n              ))}\r\n            <p>\r\n              Comments: <b>{user.commentCount}</b>\r\n            </p>\r\n            <p>\r\n              Likes: <b>{user.diggCount}</b>\r\n            </p>\r\n          </Fragment>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}