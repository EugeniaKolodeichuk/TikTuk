{"version":3,"sources":["default.png","views/NewsView.js"],"names":["NewsView","useState","trendingFeed","setTrendingFeed","axios","require","default","trends","method","url","headers","useEffect","request","then","response","data","catch","error","console","map","user","width","controls","src","videoUrl","type","text","shortid","generate","authorMeta","avatar","alt","nickName","defaultImage","to","name","hashtags","tag","commentCount","diggCount"],"mappings":"4LAAe,MAA0B,oC,OCU1B,SAASA,IAEtB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQC,EAAQ,IAASC,QAEzBC,EAAS,CACbC,OAAQ,MACRC,IAAK,gDACLC,QAAS,CACP,kBAAmB,0BACnB,iBAAkB,uDA4BtB,OAbAC,qBAAU,WACRP,EACGQ,QAAQL,GACRM,MAAK,SAAUC,GACd,IAAMC,EAAOD,EAASC,KACtBZ,EAAgBY,MAEjBC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,QAGjB,CAACd,IAGF,8BACGD,GACCA,EAAaiB,KAAI,SAAAC,GAAI,OACnB,eAAC,WAAD,WACE,uBACEC,MAAM,MACNC,SAAS,WAFX,SAKE,wBAAQC,IAAKH,EAAKI,SAAUC,KAAK,iBAEnC,4BAA6BL,EAAKM,MAA1BC,IAAQC,YACfR,EAAKS,WAAWC,OACf,qBAEET,MAAM,QACNE,IAAKH,EAAKS,WAAWC,OACrBC,IAAKX,EAAKS,WAAWG,UAHhBL,IAAQC,YAMf,qBACEP,MAAM,QACNE,IAAKU,EACLF,IAAKX,EAAKS,WAAWG,WAGzB,4BACE,cAAC,IAAD,CAAME,GAAE,mBAAcd,EAAKS,WAAWM,MAAtC,SACE,4BAAIf,EAAKS,WAAWG,cAFhBL,IAAQC,YAKfR,EAAKgB,UACJhB,EAAKgB,SAASjB,KAAI,SAAAkB,GAAG,OACnB,kCAA8BA,EAAIF,OAA1BR,IAAQC,eAEpB,2CACY,4BAAIR,EAAKkB,kBAErB,wCACS,4BAAIlB,EAAKmB,iBApCLZ,IAAQC","file":"static/js/6.1e355b10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.9d463bad.png\";","import { useState, useEffect, Fragment } from 'react';\r\nimport shortid from 'shortid';\r\nimport { Link /* useRouteMatch */ } from 'react-router-dom';\r\n/* import { trends, axios } from '../services/apiService'; */\r\n/* import * as infoAPI from '../services/apiService'; */\r\n/* import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport userEvent from '@testing-library/user-event'; */\r\nimport defaultImage from '../default.png';\r\n\r\nexport default function NewsView() {\r\n  /* const { url } = useRouteMatch(); */\r\n  const [trendingFeed, setTrendingFeed] = useState([]);\r\n\r\n  const axios = require('axios').default;\r\n\r\n  const trends = {\r\n    method: 'GET',\r\n    url: 'https://tiktok33.p.rapidapi.com/trending/feed',\r\n    headers: {\r\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n      'x-rapidapi-key': '98c48d70edmsh2b6af9661af19a5p11b7f7jsnbe8317f49551',\r\n    },\r\n  };\r\n\r\n  /* const axios = require('axios').default;\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: 'https://tiktok33.p.rapidapi.com/trending/feed',\r\n    headers: {\r\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n      'x-rapidapi-key': '98c48d70edmsh2b6af9661af19a5p11b7f7jsnbe8317f49551',\r\n    },\r\n  }; */\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .request(trends)\r\n      .then(function (response) {\r\n        const data = response.data;\r\n        setTrendingFeed(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, [setTrendingFeed]);\r\n\r\n  return (\r\n    <div>\r\n      {trendingFeed &&\r\n        trendingFeed.map(user => (\r\n          <Fragment key={shortid.generate()}>\r\n            <video\r\n              width=\"400\"\r\n              controls=\"controls\"\r\n              /* poster=\"video/duel.jpg\" */\r\n            >\r\n              <source src={user.videoUrl} type=\"video/mp4;\" />\r\n            </video>\r\n            <p key={shortid.generate()}>{user.text}</p>\r\n            {user.authorMeta.avatar ? (\r\n              <img\r\n                key={shortid.generate()}\r\n                width=\"150px\"\r\n                src={user.authorMeta.avatar}\r\n                alt={user.authorMeta.nickName}\r\n              />\r\n            ) : (\r\n              <img\r\n                width=\"400px\"\r\n                src={defaultImage}\r\n                alt={user.authorMeta.nickName}\r\n              />\r\n            )}\r\n            <p key={shortid.generate()}>\r\n              <Link to={`/profile/${user.authorMeta.name}`}>\r\n                <b>{user.authorMeta.nickName}</b>\r\n              </Link>\r\n            </p>\r\n            {user.hashtags &&\r\n              user.hashtags.map(tag => (\r\n                <p key={shortid.generate()}>#{tag.name}</p>\r\n              ))}\r\n            <p>\r\n              Comments: <b>{user.commentCount}</b>\r\n            </p>\r\n            <p>\r\n              Likes: <b>{user.diggCount}</b>\r\n            </p>\r\n          </Fragment>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}