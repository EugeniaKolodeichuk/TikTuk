{"version":3,"sources":["default.png","views/ProfileView.js"],"names":["ProfileView","uniqueId","useParams","useState","userFeed","setUserFeed","userInfo","setUserInfo","axios","require","default","info","method","url","headers","useEffect","request","then","response","infoData","data","catch","error","console","feed","feedsData","user","avatarThumb","width","src","alt","nickname","shortid","generate","defaultImage","signature","stats","followerCount","followingCount","videoCount","heart","length","map","playCount","video","dynamicCover","desc"],"mappings":"iGAAe,QAA0B,qC,yICK1B,SAASA,IACtB,IAAQC,EAAaC,cAAbD,SAER,EAAgCE,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQC,EAAQ,IAASC,QAEzBC,EAAO,CACXC,OAAQ,MACRC,IAAI,6CAAD,OAA+CZ,GAClDa,QAAS,CACP,kBAAmB,0BACnB,iBAAkB,uDAGtBC,qBAAU,WACRP,EACGQ,QAAQL,GACRM,MAAK,SAAUC,GACd,IAAMC,EAAWD,EAASE,KAC1Bb,EAAYY,MAEbE,OAAM,SAAUC,GACfC,QAAQD,MAAMA,QAGjB,CAACf,IAEJ,IAAMiB,EAAO,CACXZ,OAAQ,MACRC,IAAI,6CAAD,OAA+CZ,GAClDa,QAAS,CACP,kBAAmB,0BACnB,iBAAkB,uDAiBtB,OAbAC,qBAAU,WACRP,EACGQ,QAAQQ,GACRP,MAAK,SAAUC,GACd,IAAMO,EAAYP,EAASE,KAC3Bf,EAAYoB,MAEbJ,OAAM,SAAUC,GACfC,QAAQD,MAAMA,QAGjB,CAACjB,IAGF,gCACGC,EAASoB,MACR,eAAC,WAAD,WACGpB,EAASoB,KAAKC,YACb,qBAEEC,MAAM,QACNC,IAAKvB,EAASoB,KAAKC,YACnBG,IAAKxB,EAASoB,KAAKK,UAHdC,IAAQC,YAMf,qBACEL,MAAM,QACNC,IAAKK,IACLJ,IAAKxB,EAASoB,KAAKK,WAGvB,6BAAKzB,EAASoB,KAAKK,WACnB,4BAAIzB,EAASoB,KAAKS,YAClB,8BACE,4BAAI7B,EAAS8B,MAAMC,gBADrB,gBAGA,8BACE,4BAAI/B,EAAS8B,MAAME,iBADrB,iBAGA,8BACE,4BAAIhC,EAAS8B,MAAMG,aADrB,aAGA,8BACE,4BAAIjC,EAAS8B,MAAMI,QADrB,aAGA,yDAA4BlC,EAASoB,KAAKK,cA7B7BC,IAAQC,YAgCxB7B,EAASqC,OACRrC,EAASsC,KAAI,SAAAhB,GAAI,OACf,eAAC,WAAD,WACE,8BACE,4BAAIA,EAAKU,MAAMO,YADjB,YAGA,qBAEEf,MAAM,QACNC,IAAKH,EAAKkB,MAAMC,aAChBf,IAAKJ,EAAKoB,MAHLd,IAAQC,YAMf,4BAAIP,EAAKoB,SAXId,IAAQC,eAezB","file":"static/js/profile-view.8523ce6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.9d463bad.png\";","import { useParams } from 'react-router';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport shortid from 'shortid';\r\nimport defaultImage from '../default.png';\r\n\r\nexport default function ProfileView() {\r\n  const { uniqueId } = useParams();\r\n\r\n  const [userFeed, setUserFeed] = useState([]);\r\n  const [userInfo, setUserInfo] = useState([]);\r\n\r\n  const axios = require('axios').default;\r\n\r\n  const info = {\r\n    method: 'GET',\r\n    url: `https://tiktok33.p.rapidapi.com/user/info/${uniqueId}`,\r\n    headers: {\r\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n      'x-rapidapi-key': '98c48d70edmsh2b6af9661af19a5p11b7f7jsnbe8317f49551',\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .request(info)\r\n      .then(function (response) {\r\n        const infoData = response.data;\r\n        setUserInfo(infoData);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, [setUserInfo]);\r\n\r\n  const feed = {\r\n    method: 'GET',\r\n    url: `https://tiktok33.p.rapidapi.com/user/feed/${uniqueId}`,\r\n    headers: {\r\n      'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n      'x-rapidapi-key': '98c48d70edmsh2b6af9661af19a5p11b7f7jsnbe8317f49551',\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .request(feed)\r\n      .then(function (response) {\r\n        const feedsData = response.data;\r\n        setUserFeed(feedsData);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line\r\n  }, [setUserFeed]);\r\n\r\n  return (\r\n    <div>\r\n      {userInfo.user && (\r\n        <Fragment key={shortid.generate()}>\r\n          {userInfo.user.avatarThumb ? (\r\n            <img\r\n              key={shortid.generate()}\r\n              width=\"150px\"\r\n              src={userInfo.user.avatarThumb}\r\n              alt={userInfo.user.nickname}\r\n            />\r\n          ) : (\r\n            <img\r\n              width=\"150px\"\r\n              src={defaultImage}\r\n              alt={userInfo.user.nickname}\r\n            />\r\n          )}\r\n          <h2>{userInfo.user.nickname}</h2>\r\n          <p>{userInfo.user.signature}</p>\r\n          <p>\r\n            <b>{userInfo.stats.followerCount}</b> followers\r\n          </p>\r\n          <p>\r\n            <b>{userInfo.stats.followingCount}</b> followings\r\n          </p>\r\n          <p>\r\n            <b>{userInfo.stats.videoCount}</b> videos\r\n          </p>\r\n          <p>\r\n            <b>{userInfo.stats.heart}</b> hearts\r\n          </p>\r\n          <h3>Other posts created by {userInfo.user.nickname}</h3>\r\n        </Fragment>\r\n      )}\r\n      {userFeed.length ? (\r\n        userFeed.map(user => (\r\n          <Fragment key={shortid.generate()}>\r\n            <p>\r\n              <b>{user.stats.playCount}</b> views\r\n            </p>\r\n            <img\r\n              key={shortid.generate()}\r\n              width=\"200px\"\r\n              src={user.video.dynamicCover}\r\n              alt={user.desc}\r\n            />\r\n\r\n            <p>{user.desc}</p>\r\n          </Fragment>\r\n        ))\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}